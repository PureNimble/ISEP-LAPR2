@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto
'skinparam classAttributeIconSize 0
'left to right direction

title US09 - Class Diagram


class SendMessageUI


class SendMessageController {
    + sendMessageController ()
    + getMessage ()
    + createNewMessageToAgent ()
  }

SendMessageUI .> SendMessageController

class Repositories {
-Repositories()

+getInstance():Repositories
+getPublishedAnnouncementRepository()
+getMessageRepository()
+getComissionRepository()
+getPropertyTypeRepository()
+getUserRepository()

}


class PublishedAnnouncementRepository {

+ getTypeOfProperty()
+ getTypeOfBussiness()
}

class PropertyTypeRepository{
    + getPropertyTypeByDescription(String propertyTypeDescription)
    +add(PropertyType propertyType)
    +getPropertyTypes()
    -validatePropertyType(PropertyType propertyType)
}

class UserRepository{
+add(User user)
+validateUser(User user)
+getUsers()
}

class ComissionRepository{
+getComissionByDescription(Double comissionDescription)
+add(Comission comission)
-validateComission(Comission comission)
+getComission()
}

class MessageRepository {
+add(Message message)
+getMessages()
-validateMessage(Message message)
-checkIfTimeOverlaps(Message message1, Message message2)
}

class Message {
    - String name
    - int phoneNumber
    - Date initialDate
    - int initialTime
    - int endTime
    - String description

    + Message(String name, int phoneNumber, String description, \nDate initialDate, int initialTime, int endTime, \nPublishedAnnouncement publishedAnnouncement)
    + Message()
    + getName()
    + getPhoneNumber()
    + getDescription()
    + getInitialDate()
    + getInitialTime()
    + getEndTime()
    + getPublishedAnnouncement()

}



class Property {
    - int area
    - int distanceFromTheCityCenter

    +Property(int area, int distanceFromCityCenter)
    +toString()
}

class Photos{
    - String url

    +Photos(String url)
    + getUrl()
}

class House {
    - String basement
    - String inhabitableLoft
    - String sunExposure

    + House(int area, int distanceFromCityCenter, int numberOfBedrooms, \nint numberOfBathrooms, int parkingSpaces, AvailableEquipment availableEquipment, \nString basement, String inhabitableLoft, String sunExposure)
    + toString()
}

class Residence {
 - int numberOfBedrooms
 - int numberOfBathrooms
 - int parkingSpaces

    + Residence(int area, int distanceFromCityCenter, int numberOfBedrooms,\n int numberOfBathrooms, int parkingSpaces, \nAvailableEquipment availableEquipment)
    + toString()
}

class SunExposure {
    - String direction

    +SunExposure(direction)
}

class AvailableEquipment {
    - String typeOfEquipment

    +AvailableEquipment(String availableEquipment)
    +getAvailableEquipment()
    + toString()
}




class User{
-String name
-int tax number
-int phone number
-String email

+getName()
+User(email,taxNumber,name,phoneNumber)
+getEmail()
+getPhoneNumber()
+getTaxNumber()
}



class Address {
    -String streetName
    -int zipCode

    +verifyZipCode()
    +getCity()
    +getDistrict()
    +getState()
    +Address(state, district, city, street, zipCode)
}



class City {
     - String cityName

    -getCityName()
}

class District{
- String districtName


    +getDistrictName()
    +getCities()
    +toString()
}

class State{
  - String stateName

     +getState()
     +getDistricts()
     +toString()
}



class Comission{
     - double percentage
     - double staticValue

    + calculateFinalComission()
}


class Rent {
    - int durationOfContract

    +Rent(int durationContract)
    +getFinalComission()
    +getDurationContract()
    +calculateTotalPrice()
}

class Announcement {
    - String initialDate
    - String finalDate
    - String contractType

    +getUser()
    +PublishedAnnouncement(initialDate, finalDate, AnnouncementRequest)
}

class Business {
    - double requestedPrice
    -String typeOfBusiness

    +getFinalComission()
    +calculatePriceWithComission()
    +getTypeOfBusiness()
}

class Repositories
{
    + getPublishedAnnouncementRepository()
}



SendMessageController .> Repositories : repositories
Repositories --> Repositories :instance
Repositories ..> UserRepository : user
Repositories ..> ComissionRepository : comission
Repositories ..> PublishedAnnouncementRepository : announcement
Repositories ..> PropertyTypeRepository : propertyType
Repositories ..> MessageRepository : message

MessageRepository -down-> Message
Agent "1" -up- "*" Message : recives a >
Message "1" -right- "*" PublishedAnnouncementRepository: has a <



PropertyTypeRepository --> Property
Residence <|-down-- House
Property <|-down-- Residence
Property "1" -left- "1..30" Photos: has >
SunExposure "1" --right- "*" House: contains <
AvailableEquipment "*" -left- "1" Residence: contains <




State "*"-left- "1" Address: has a  <
City "*"-left- "1" District: has a  <
District "*"-left- "1" State: has a  <
User "1" --- "1" Address: has >
UserRepository --> User
PublishedAnnouncementRepository --> Business
User "1"-right-"*" Message : sends a >


ComissionRepository -down-> Comission
Comission "*" -up "1" Agent: defines <
Comission "1" -- "1" Business: contains <
Property "1" - "1" Business: has a <
Announcement "1" --- "1" Business: has >
Announcement "1" --down- "1" Property: has a >
Announcement "*" -up-- "1" Agent: publishes <
Business <|--- Rent


@enduml