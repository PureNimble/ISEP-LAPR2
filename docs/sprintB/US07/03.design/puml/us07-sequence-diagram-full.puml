@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Unregistered User" as UnregisteredUser
participant "UnregisterUserUI" as UnregisterUserUI
participant "UnregisterUserController" as UnregisterUserController
participant "User\n:User" as User
participant ":repository" as RepositorySingleton
participant "repository\n:Repository" as repository
participant "stateRepository\n:StateRepository" as StateRepository
participant "Person\n:Person" as Person
participant "authenticationRepository\n:AuthenticationRepository" as AuthenticationRepository

activate UnregisteredUser

    UnregisteredUser -> UnregisterUserUI : asks to create an account
    activate UnregisterUserUI
        UnregisterUserUI -> UnregisterUserController : getStates()
            activate UnregisterUserController
            UnregisterUserController -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> UnregisterUserController : repositories

            deactivate RepositorySingleton

            UnregisterUserController -> repository : getStateRepository()

            activate repository

                repository --> UnregisterUserController : StateRepository

            deactivate repository
                UnregisterUserController -> StateRepository : getStates()
                    activate StateRepository
                        StateRepository --> UnregisterUserController : StatesList
                    deactivate StateRepository
                UnregisterUserController --> UnregisterUserUI : StatesList
            deactivate UnregisterUserController
        UnregisterUserUI --> UnregisteredUser : requests data (name, passport card number, tax number,\naddress ((asks to select a state) (not mandatory)), email address and phone number)\nand shows list of states
        deactivate UnregisterUserUI

    alt Enters Address/State
    UnregisteredUser -> UnregisterUserUI : types all data and selects state
        activate UnregisterUserUI
        UnregisterUserUI --> UnregisterUserUI : keepData(name, passport card number, tax number, \nstate, email address, phone number)
        UnregisterUserUI --> UnregisterUserController : getDistrictByDescription(state)
            activate UnregisterUserController
                            UnregisterUserController -> StateRepository : getDistrictByDescription(state)
                        activate StateRepository
                        StateRepository --> UnregisterUserController : DistrictsList
                        deactivate StateRepository
                    UnregisterUserController --> UnregisterUserUI : DistrictsList
                deactivate UnregisterUserController
            UnregisterUserUI --> UnregisteredUser : shows list of districts available for that state and asks to select one
        deactivate UnregisterUserUI

    UnregisteredUser -> UnregisterUserUI : selects district
        activate UnregisterUserUI
            UnregisterUserUI --> UnregisterUserUI : keepDistrict(district)
            UnregisterUserUI --> UnregisterUserController : getCityByDescription(district)
            activate UnregisterUserController
                            UnregisterUserController -> StateRepository : getCityByDescription(district)
                        activate StateRepository
                        StateRepository --> UnregisterUserController : CitiesList
                        deactivate StateRepository
                    UnregisterUserController --> UnregisterUserUI : CitiesList
                deactivate UnregisterUserController
            UnregisterUserUI --> UnregisteredUser : shows list of cities available for that district and asks to select one
        deactivate UnregisterUserUI
    UnregisteredUser -> UnregisterUserUI : selects city
        activate UnregisterUserUI
        UnregisterUserUI --> UnregisterUserUI : keepCity(city)
        UnregisterUserUI --> UnregisteredUser : asks data
    deactivate UnregisterUserUI
    UnregisteredUser -> UnregisterUserUI : types necessary data (street and zip code)
        activate UnregisterUserUI
        UnregisterUserUI --> UnregisterUserUI : keepAddress(street and zip code)
        deactivate UnregisterUserUI 

    else Does nor enter Address/State
    UnregisteredUser -> UnregisterUserUI : types requested data except the address/state
        activate UnregisterUserUI
    end
        UnregisterUserUI --> UnregisteredUser : shows inserted data and asks for confirmation
    deactivate UnregisterUserUI

    UnregisteredUser -> UnregisterUserUI : confirms data
    activate UnregisterUserUI

        UnregisterUserUI -> UnregisterUserController : registerPerson(name, passport card number, tax number,\nstate, district, city, street, zip code, email address\nand phone number)
        activate UnregisterUserController

        UnregisterUserController -> Person : registerPerson(name, passport card number, tax number,\nstate, district, city, street, zip code, email address\nand phone number)
        activate Person
                Person -> Person : addPerson(Person)
                activate Person
                            activate Person
                                Person -> Person : validatePerson(Person)
                            deactivate Person
                deactivate Person
                Person --> UnregisterUserController : Person
            deactivate Person
        UnregisterUserController -> RepositorySingleton: getInstance()
            activate RepositorySingleton

        RepositorySingleton --> UnregisterUserController : repositories
        deactivate RepositorySingleton

            UnregisterUserController -> repository: getAuthenticationRepository()
            activate repository

            repository--> UnregisterUserController:authenticationRepository
            deactivate repository

        UnregisterUserController -> AuthenticationRepository: getpasswordGenerator()
        activate AuthenticationRepository


    AuthenticationRepository --> UnregisterUserController: password
    deactivate AuthenticationRepository


    UnregisterUserController -> AuthenticationRepository: addUser(person and passsword)
    activate AuthenticationRepository

    AuthenticationRepository --> UnregisterUserController: User
    deactivate AuthenticationRepository

    UnregisterUserController --> UnregisterUserUI: User
      deactivate UnregisterUserController
        UnregisterUserUI --> UnregisteredUser : displays operation success
        deactivate UnregisterUserUI
deactivate UnregisteredUser

@enduml