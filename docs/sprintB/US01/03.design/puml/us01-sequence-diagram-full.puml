@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Unregistered User" as User
participant ":DisplayPropertiesUI" as System
participant ":DisplayPropertiesController" as Controller
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as Repositories
participant "AnnouncementRepository\n:AnnouncementRepository" as AnnouncementRepository
participant "Announcement\n:Announcement" as Announcement
participant "Property\n:Property" as Property
participant "Address\n:Address" as Address
participant "ComparePrice\n:Compare" as Compare

activate User

User -> System : asks to display a list of properties
activate System

System -> Controller** : create

System -> Controller : getAnnouncement()
activate Controller

Controller -> RepositorySingleton : getInstance()
activate RepositorySingleton

RepositorySingleton --> Controller: repositories
deactivate RepositorySingleton

Controller -> Repositories : getAnnouncementRepository()
activate Repositories

Repositories --> Controller: AnnouncementRepository
deactivate Repositories

Controller -> AnnouncementRepository : getAnnouncement()
activate AnnouncementRepository

AnnouncementRepository --> Controller : AnnouncementList
deactivate AnnouncementRepository

Controller --> System : AnnouncementList
deactivate Controller

alt List with Properties

    System --> User : displays a list of properties from the most recent uploaded to the oldest
    deactivate System

    User -> System : asks to filter the list of properties
    activate System

    System --> User : asks to specify the options to filter [type of business (buying or renting), \ntype of property (house, apartment or land) and the number of rooms]
    deactivate System

        alt Selects options to filter

            User -> System : selects the options to filter the list of properties
            activate System

            System -> Controller : displayProperties(type of business, \ntype of property, number of rooms)
            activate Controller

            Controller -> RepositorySingleton : getInstance()
            activate RepositorySingleton

            RepositorySingleton --> Controller : repositories
            deactivate RepositorySingleton

            Controller -> Repositories : getAnnouncementRepository()
            activate Repositories

            Repositories --> Controller : AnnouncementRepository
            deactivate Repositories

            Controller -> AnnouncementRepository : displayProperties (type of business, type of property, number of rooms)
            activate AnnouncementRepository

                loop For Each Announcement

                AnnouncementRepository -> Announcement : getAnnouncementRepository(type of business, type of property, number of rooms)
                activate Announcement

                Announcement -> Property : getPropertyByCharacteristics(type of business, type of property, number of rooms)
                activate Property

                Property --> Announcement : Property
                deactivate Property

                Announcement --> AnnouncementRepository : Announcement
                deactivate Announcement

                end

            AnnouncementRepository --> Controller : AnnouncementList
            deactivate AnnouncementRepository

        else Doesn't select options to filter

            User -> System : doesn't select any option to filter the list of properties

        end

    System --> User : displays the list of properties
    deactivate System

    User -> System : asks to order the filtered list of properties
    activate System

    System --> User : asks to specify the options to order (price, city or state) and (ascending or descending)
    deactivate System

    User -> System : selects the options to order the filtered list of properties
    activate System

    alt In case the selected ordering method is by price (which can be ascending or descending)

        System -> Controller : sortPropertiesByPrice()
        activate Controller

        Controller -> RepositorySingleton : getInstance()
        activate RepositorySingleton

        RepositorySingleton --> Controller : Repositories
        deactivate RepositorySingleton

        Controller -> Repositories : getAnnouncementRepository()
        activate Repositories

        Repositories --> Controller : AnnouncementRepository
        deactivate Repositories

            alt Sorting by Ascending Price

                Controller -> AnnouncementRepository : sortPropertiesByAscendingPrice()
                activate AnnouncementRepository

                AnnouncementRepository -> Announcement : sortPropertiesByAscendingPrice()
                activate Announcement

                    loop

                    Announcement -> Property : getProperty()
                    activate Property

                    Property -> Property : getPrice()

                    Property --> Announcement : Property
                    deactivate Property

                    Announcement -> Compare : compare(announcement1, announcement2)
                    activate Compare

                    Compare --> Announcement : comparisonResult
                    deactivate Compare

                    end

                Announcement --> AnnouncementRepository : AnnouncementListByAscendingPrice
                deactivate Announcement

                AnnouncementRepository --> Controller : announcementListByAscendingPrice
                deactivate AnnouncementRepository

            else Sorting by Descending Order

                Controller -> AnnouncementRepository : sortPropertiesByDescendingPrice()
                activate AnnouncementRepository

                AnnouncementRepository -> Announcement : sortPropertiesByDescendingPrice()
                activate Announcement

                    loop

                    Announcement -> Property : getProperty()
                    activate Property

                    Property -> Property : getPrice()

                    Property --> Announcement : Property
                    deactivate Property

                    Announcement -> Compare : compare(announcement1, announcement2)
                    activate Compare

                    Compare --> Announcement : comparisonResult
                    deactivate Compare

                    end

                Announcement --> AnnouncementRepository : AnnouncementListByDescendingPrice
                deactivate Announcement

                AnnouncementRepository --> Controller : announcementListByDescendingPrice
                deactivate AnnouncementRepository

            end

        Controller --> System : AnnouncementListByPrice
        deactivate Controller

    else In case the selected ordering method is by city name (which can be ascending or descending)

        System -> Controller : sortPropertiesByCityName()
        activate Controller

        Controller -> RepositorySingleton : getInstance()
        activate RepositorySingleton

        RepositorySingleton --> Controller : Repositories
        deactivate RepositorySingleton

        Controller -> Repositories : getAnnouncementRepository()
        activate Repositories

        Repositories --> Controller : AnnouncementRepository
        deactivate Repositories

            alt Sorting by Ascending City Name

                Controller -> AnnouncementRepository : sortPropertiesByAscendingCityName()
                activate AnnouncementRepository

                AnnouncementRepository -> Announcement : sortPropertiesByAscendingCityName()
                activate Announcement

                    loop

                    Announcement -> Property : getProperty()
                    activate Property

                    Property -> Address : getAddress()
                    activate Address

                    Address -> Address : getCity()
                    Address -> Address : getDistrict()
                    Address -> Address : getState()

                    Address --> Property : Address
                    deactivate Address

                    Property --> Announcement : Property
                    deactivate Property

                    Announcement -> Compare : compare(announcement1, announcement2)
                    activate Compare

                    Compare --> Announcement : comparisonResult
                    deactivate Compare

                    end

                Announcement --> AnnouncementRepository : AnnouncementListByAscendingCityName
                deactivate Announcement

                AnnouncementRepository --> Controller : announcementListByAscendingCityName
                deactivate AnnouncementRepository

            else Sorting by Descending Order

                Controller -> AnnouncementRepository : sortPropertiesByDescendingCityName()
                activate AnnouncementRepository

                AnnouncementRepository -> Announcement : sortPropertiesByDescendingCityName()
                activate Announcement

                    loop

                    Announcement -> Property : getProperty()
                    activate Property

                    Property -> Address : getAddress()
                    activate Address

                    Address -> Address : getCity()
                    Address -> Address : getDistrict()
                    Address -> Address : getState()

                    Address --> Property : Address
                    deactivate Address

                    Property --> Announcement : Property
                    deactivate Property

                    Announcement -> Compare : compare(announcement1, announcement2)
                    activate Compare

                    Compare --> Announcement : comparisonResult
                    deactivate Compare

                    end

                Announcement --> AnnouncementRepository : AnnouncementListByDescendingCityName
                deactivate Announcement

                AnnouncementRepository --> Controller : announcementListByDescendingCityName
                deactivate AnnouncementRepository

            end

        Controller --> System : AnnouncementListByCityName
        deactivate Controller

    else In case the selected ordering method is by state name (which can be ascending or descending)

        System -> Controller : sortPropertiesByStateName()
        activate Controller

        Controller -> RepositorySingleton : getInstance()
        activate RepositorySingleton

        RepositorySingleton --> Controller : Repositories
        deactivate RepositorySingleton

        Controller -> Repositories : getAnnouncementRepository()
        activate Repositories

        Repositories --> Controller : AnnouncementRepository
        deactivate Repositories

            alt Sorting by Ascending State Name

                Controller -> AnnouncementRepository : sortPropertiesByAscendingStateName()
                activate AnnouncementRepository

                AnnouncementRepository -> Announcement : sortPropertiesByAscendingStateName()
                activate Announcement

                    loop

                    Announcement -> Property : getProperty()
                    activate Property

                    Property -> Address : getAddress()
                    activate Address

                    Address -> Address : getState()

                    Address --> Property : Address
                    deactivate Address

                    Property --> Announcement : Property
                    deactivate Property

                    Announcement -> Compare : compare(announcement1, announcement2)
                    activate Compare

                    Compare --> Announcement : comparisonResult
                    deactivate Compare

                    end

                Announcement --> AnnouncementRepository : AnnouncementListByAscendingStateName
                deactivate Announcement

                AnnouncementRepository --> Controller : announcementListByAscendingStateName
                deactivate AnnouncementRepository

            else Sorting by Descending Order

                Controller -> AnnouncementRepository : sortPropertiesByDescendingStateName()
                activate AnnouncementRepository

                AnnouncementRepository -> Announcement : sortPropertiesByDescendingStateName()
                activate Announcement

                    loop

                    Announcement -> Property : getProperty()
                    activate Property

                    Property -> Address : getAddress()
                    activate Address

                    Address -> Address : getState()

                    Address --> Property : Address
                    deactivate Address

                    Property --> Announcement : Property
                    deactivate Property

                    Announcement -> Compare : compare(announcement1, announcement2)
                    activate Compare

                    Compare --> Announcement : comparisonResult
                    deactivate Compare

                    end

                Announcement --> AnnouncementRepository : AnnouncementListByDescendingStateName
                deactivate Announcement

                AnnouncementRepository --> Controller : announcementListByDescendingStateName
                deactivate AnnouncementRepository

            end

        Controller --> System : AnnouncementListByStateName
        deactivate Controller


    end

    System --> User : display the filtered list of properties with the ordering method selected
    deactivate System

else List without Properties

    System --> User : displays a empty list of properties
    deactivate System

end

@enduml