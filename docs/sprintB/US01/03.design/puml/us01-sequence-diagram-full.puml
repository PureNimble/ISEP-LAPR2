@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Unregistered User" as User
participant ":DisplayPropertiesUI" as System
participant ":DisplayPropertiesController" as Controller
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as Repositories
participant "PublishedAnnouncementRepository\n:PublishedAnnouncementRepository" as PublishedAnnouncementRepository
participant "PublishedAnnouncement" as PublishedAnnouncement
participant "Property" as Property
participant "Address" as Address
participant "Comparator" as Comparator
participant "City" as City
participant "State" as State
participant "Business" as Business

activate User

User -> System : asks to display a list of properties
activate System

System -> Controller** : create

System -> Controller : getPublishedAnnouncement()
activate Controller

Controller -> RepositorySingleton : getInstance()
activate RepositorySingleton

RepositorySingleton --> Controller: repositories
deactivate RepositorySingleton

Controller -> Repositories : getPublishedAnnouncementRepository()
activate Repositories

Repositories --> Controller: PublishedAnnouncementRepository
deactivate Repositories

Controller -> PublishedAnnouncementRepository : getPublishedAnnouncement()
activate PublishedAnnouncementRepository

PublishedAnnouncementRepository -> PublishedAnnouncement : getPublishedAnnouncement()
activate PublishedAnnouncement

PublishedAnnouncement -> Comparator : compare(announcement1, announcement2)
activate Comparator

Comparator --> PublishedAnnouncement : comparisonResult
deactivate Comparator

PublishedAnnouncement --> PublishedAnnouncementRepository : PublishedAnnouncementList
deactivate PublishedAnnouncement

PublishedAnnouncementRepository --> Controller : PublishedAnnouncementList
deactivate PublishedAnnouncementRepository

Controller --> System : PublishedAnnouncementList
deactivate Controller

alt List with Properties

    System --> User : displays a list of properties from the most recent uploaded to the oldest
    deactivate System

    User -> System : asks to filter the list of properties
    activate System

    System --> User : display the options to filter [type of business (buying or renting), \ntype of property (house, apartment or land) and the number of rooms]
    deactivate System

        alt Selects options to filter

            User -> System : selects the options to filter the list of properties
            activate System


System -> Controller : displayAnnouncements(type of property, type of business, number of rooms)
activate Controller

Controller -> RepositorySingleton : getInstance()
activate RepositorySingleton

RepositorySingleton --> Controller : repositories
deactivate RepositorySingleton

Controller -> Repositories : getPublishedAnnouncementRepository()
activate Repositories

Repositories --> Controller : PublishedAnnouncementRepository
deactivate Repositories

alt type of property is not "land"

    Controller -> PublishedAnnouncementRepository : displayAnnouncements(type of property, type of business, number of rooms)
    activate PublishedAnnouncementRepository


    loop For Each Published Announcement

        PublishedAnnouncementRepository -> PublishedAnnouncement : getPublishedAnnouncement(type of property, type of business, number of rooms)
        activate PublishedAnnouncement

        PublishedAnnouncement --> PublishedAnnouncementRepository : PublishedAnnouncement
        deactivate PublishedAnnouncement

    end

else

    Controller -> PublishedAnnouncementRepository : displayAnnouncements(type of property, type of business)

   loop For Each Published Announcement

           PublishedAnnouncementRepository -> PublishedAnnouncement : getPublishedAnnouncement(type of property, type of business)
           activate PublishedAnnouncement

           PublishedAnnouncement --> PublishedAnnouncementRepository : PublishedAnnouncement
           deactivate PublishedAnnouncement

       end

end

PublishedAnnouncementRepository --> Controller : PublishedAnnouncementList
deactivate PublishedAnnouncementRepository

Controller --> System : PublishedAnnouncementList
deactivate Controller

        else Doesn't select options to filter

            User -> System : doesn't select any option to filter the list of properties

        end

    System --> User : displays the list of properties
    deactivate System

    User -> System : asks to order the filtered list of properties
    activate System

    System --> User : asks to specify the options to order (price, city or state) and (ascending or descending)
    deactivate System

    alt Selects ordering method

    User -> System : selects the options to order the filtered list of properties
    activate System

    alt In case the selected ordering method is by price (which can be ascending or descending)

        System -> Controller : sortAnnouncementsByPrice()
        activate Controller

        Controller -> RepositorySingleton : getInstance()
        activate RepositorySingleton

        RepositorySingleton --> Controller : Repositories
        deactivate RepositorySingleton

        Controller -> Repositories : getPublishedAnnouncementRepository()
        activate Repositories

        Repositories --> Controller : PublishedAnnouncementRepository
        deactivate Repositories

        Controller -> Repositories : getPublishedAnnouncement()
        activate Repositories

        Repositories --> Controller : PublishedAnnouncement
        deactivate Repositories

            alt Sorting by Ascending Price

                Controller -> PublishedAnnouncementRepository : sortAnnouncementsByAscendingPrice()
                activate PublishedAnnouncementRepository

                PublishedAnnouncementRepository -> PublishedAnnouncement : sortAnnouncementsByAscendingPrice()
                activate PublishedAnnouncement

                    loop

                    PublishedAnnouncement -> Business : getBusiness()
                    activate Business

                    Business -> Business : getPrice()

                    Business --> PublishedAnnouncement : Business
                    deactivate Business

                    PublishedAnnouncement -> Comparator : compare(announcement1, announcement2)
                    activate Comparator

                    Comparator --> PublishedAnnouncement : comparisonResult
                    deactivate Comparator

                    end

                PublishedAnnouncement --> PublishedAnnouncementRepository : AnnouncementListByAscendingPrice
                deactivate PublishedAnnouncement

                PublishedAnnouncementRepository --> Controller : announcementListByAscendingPrice
                deactivate PublishedAnnouncementRepository

                Controller --> System : AnnouncementListByAscendingPrice


            else Sorting by Descending Order

                Controller -> PublishedAnnouncementRepository : sortAnnouncementsByDescendingPrice()
                activate PublishedAnnouncementRepository

                PublishedAnnouncementRepository -> PublishedAnnouncement : sortAnnouncementsByDescendingPrice()
                activate PublishedAnnouncement

                    loop

                    PublishedAnnouncement -> Business : getBusiness()
                    activate Business

                    Business -> Business : getPrice()

                    Business --> PublishedAnnouncement : Property
                    deactivate Business

                    PublishedAnnouncement -> Comparator : compare(announcement1, announcement2)
                    activate Comparator

                    Comparator --> PublishedAnnouncement : comparisonResult
                    deactivate Comparator

                    end

                PublishedAnnouncement --> PublishedAnnouncementRepository : AnnouncementListByDescendingPrice
                deactivate PublishedAnnouncement

                PublishedAnnouncementRepository --> Controller : announcementListByDescendingPrice
                deactivate PublishedAnnouncementRepository

                Controller --> System : AnnouncementListByDescendingPrice
                deactivate Controller

            end

    else In case the selected ordering method is by city name (which can be ascending or descending)

        System -> Controller : sortAnnouncementsByCityName()
        activate Controller

        Controller -> RepositorySingleton : getInstance()
        activate RepositorySingleton

        RepositorySingleton --> Controller : Repositories
        deactivate RepositorySingleton

        Controller -> Repositories : getPublishedAnnouncementRepository()
        activate Repositories

        Repositories --> Controller : PublishedAnnouncementRepository
        deactivate Repositories

        Controller -> Repositories : getPublishedAnnouncement()
        activate Repositories

        Repositories --> Controller : PublishedAnnouncement
        deactivate Repositories

            alt Sorting by Ascending City Name

                Controller -> PublishedAnnouncementRepository : sortAnnouncementsByAscendingCityName()
                activate PublishedAnnouncementRepository

                PublishedAnnouncementRepository -> PublishedAnnouncement : sortAnnouncementsByAscendingCityName()
                activate PublishedAnnouncement

                    loop

                    PublishedAnnouncement -> Property : getProperty()
                    activate Property

                    Property -> Address : getAddress()
                    activate Address

                    Address -> City : getCityName()
                    activate City

                    City --> Address : cityName
                    deactivate City

                    Address --> Property : Address
                    deactivate Address

                    Property --> PublishedAnnouncement : Property
                    deactivate Property

                    PublishedAnnouncement -> Comparator : compare(announcement1, announcement2)
                    activate Comparator

                    Comparator --> PublishedAnnouncement : comparisonResult
                    deactivate Comparator

                    end

                PublishedAnnouncement --> PublishedAnnouncementRepository : AnnouncementListByAscendingCityName
                deactivate PublishedAnnouncement

                PublishedAnnouncementRepository --> Controller : announcementListByAscendingCityName
                deactivate PublishedAnnouncementRepository

                Controller --> System : AnnouncementListByAscendingCityName

            else Sorting by Descending Order

                Controller -> PublishedAnnouncementRepository : sortAnnouncementsByDescendingCityName()
                activate PublishedAnnouncementRepository

                PublishedAnnouncementRepository -> PublishedAnnouncement : sortAnnouncementsByDescendingCityName()
                activate PublishedAnnouncement

                    loop

                    PublishedAnnouncement -> Property : getProperty()
                    activate Property

                    Property -> Address : getAddress()
                    activate Address

                    Address -> City : getCityName()
                    activate City

                    City --> Address : cityName
                    deactivate City

                    Address --> Property : Address
                    deactivate Address

                    Property --> PublishedAnnouncement : Property
                    deactivate Property

                    PublishedAnnouncement -> Comparator : compare(announcement1, announcement2)
                    activate Comparator

                    Comparator --> PublishedAnnouncement : comparisonResult
                    deactivate Comparator

                    end

                PublishedAnnouncement --> PublishedAnnouncementRepository : AnnouncementListByDescendingCityName
                deactivate PublishedAnnouncement

                PublishedAnnouncementRepository --> Controller : announcementListByDescendingCityName
                deactivate PublishedAnnouncementRepository

                Controller --> System : AnnouncementListByDescendingCityName
                deactivate Controller

            end

    else In case the selected ordering method is by state name (which can be ascending or descending)

        System -> Controller : sortAnnouncementsByStateName()
        activate Controller

        Controller -> RepositorySingleton : getInstance()
        activate RepositorySingleton

        RepositorySingleton --> Controller : Repositories
        deactivate RepositorySingleton

        Controller -> Repositories : getPublishedAnnouncementRepository()
        activate Repositories

        Repositories --> Controller : PublishedAnnouncementRepository
        deactivate Repositories

        Controller -> Repositories : getPublishedAnnouncement()
        activate Repositories

        Repositories --> Controller : PublishedAnnouncement
        deactivate Repositories

            alt Sorting by Ascending State Name

                Controller -> PublishedAnnouncementRepository : sortAnnouncementsByAscendingStateName()
                activate PublishedAnnouncementRepository

                PublishedAnnouncementRepository -> PublishedAnnouncement : sortAnnouncementsByAscendingStateName()
                activate PublishedAnnouncement

                    loop

                    PublishedAnnouncement -> Property : getProperty()
                    activate Property

                    Property -> Address : getAddress()
                    activate Address

                    Address -> State : getStateName()
                    activate State

                    State --> Address : stateName
                    deactivate State

                    Address --> Property : Address
                    deactivate Address

                    Property --> PublishedAnnouncement : Property
                    deactivate Property

                    PublishedAnnouncement -> Comparator : compare(announcement1, announcement2)
                    activate Comparator

                    Comparator --> PublishedAnnouncement : comparisonResult
                    deactivate Comparator

                    end

                PublishedAnnouncement --> PublishedAnnouncementRepository : AnnouncementListByAscendingStateName
                deactivate PublishedAnnouncement

                PublishedAnnouncementRepository --> Controller : announcementListByAscendingStateName
                deactivate PublishedAnnouncementRepository

                Controller --> System : AnnouncementListByAscendingStateName

            else Sorting by Descending Order

                Controller -> PublishedAnnouncementRepository : sortAnnouncementsByDescendingStateName()
                activate PublishedAnnouncementRepository

                PublishedAnnouncementRepository -> PublishedAnnouncement : sortAnnouncementsByDescendingStateName()
                activate PublishedAnnouncement

                    loop

                    PublishedAnnouncement -> Property : getProperty()
                    activate Property

                    Property -> Address : getAddress()
                    activate Address

                    Address -> State : getStateName()
                    activate State

                    State --> Address : stateName
                    deactivate State

                    Address --> Property : Address
                    deactivate Address

                    Property --> PublishedAnnouncement : Property
                    deactivate Property

                    PublishedAnnouncement -> Comparator : compare(announcement1, announcement2)
                    activate Comparator

                    Comparator --> PublishedAnnouncement : comparisonResult
                    deactivate Comparator

                    end

                PublishedAnnouncement --> PublishedAnnouncementRepository : AnnouncementListByDescendingStateName
                deactivate PublishedAnnouncement

                PublishedAnnouncementRepository --> Controller : announcementListByDescendingStateName
                deactivate PublishedAnnouncementRepository

                Controller --> System : AnnouncementListByDescendingStateName
                deactivate Controller


            end

    end

    else Doesn't select a ordering method

    User -> System : doesn't select the options to order the filtered list of properties

    end

    System --> User : display the filtered list of properties with the ordering method selected
    deactivate System

else List without Properties

    System --> User : displays a empty list of properties
    deactivate System

end

@enduml