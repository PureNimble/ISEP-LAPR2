@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Agent" as Agent
participant ":PublishUI" as UI
participant ":PublishController" as CTRL
participant "ownerIdentityRepository:\nOwner Identity Repository" as OwnerRepository
participant "propertyTypesRepository:\nProperty Type Repository" as PropertyTypeRepository
participant "typesComissionRepository:\n Types Commission Repository" as typesComissionRepository
participant ":Repositories" as Repository
participant "repositories\n:Repositories" as Repository2
participant "announcementRepository\n:Announcement Repository" as announcementRepository
participant "announcement:\nAnnouncement" as announcement

activate Agent

        Agent -> UI : asks to publish an announcement

        activate UI

            UI --> CTRL** : create
            UI --> Agent : requests owner identity
                    deactivate UI



    Agent -> UI : inserts the owner email
    activate UI

            UI --> CTRL : getOwnerInformation()

                activate CTRL

                    CTRL -> OwnerRepository : getOwnerInformation()

                        activate OwnerRepository

                    OwnerRepository --> CTRL : Owner Information

                       deactivate OwnerRepository

            CTRL --> UI : Owner Information

                deactivate CTRL


            UI --> Agent : shows owner information
        deactivate UI

    Agent -> UI : confirms owner identity
        activate UI

            UI --> CTRL : getPropertyType()
            activate CTRL

                CTRL -> PropertyTypeRepository : getPropertyType()
                activate PropertyTypeRepository

                PropertyTypeRepository --> CTRL : Property Type
                deactivate PropertyTypeRepository

            CTRL --> UI : Property Type
            deactivate CTRL

            UI --> Agent : list and request the property type
        deactivate UI

    Agent -> UI : chooses the property type
    activate UI

        UI --> Agent : requests property data
    deactivate UI

    Agent -> UI : types requested data [area in m^2, state, district, city, street, zip code and distance from city center]
            activate UI

        opt house, apartment
            autonumber 19
            Agent -> UI : types requested data [number of bedrooms, number of bathrooms, number of parking spaces, \navailable equipment (central heating and/or airconditioning)]

            opt house
                autonumber 20
                Agent -> UI : types requested data [the existence of a basement and/or inhabitable loft, sun exposure \n(North, South, East, West)]
            end
        end

UI ---> Agent : saves all data and asks for photos of the property
        deactivate UI

    loop Sends photos (from 1 up to 30 pictures)

        Agent -> UI : sends photos of the property
            activate UI
        end

           UI --> CTRL : getTypeComission()
           activate CTRL

                CTRL -> typesComissionRepository : getTypeComission()
                activate typesComissionRepository

                typesComissionRepository --> CTRL : Type Comission
                deactivate typesComissionRepository

           CTRL --> UI : Type Comission
           deactivate CTRL


        UI --> Agent: Type Comission
    deactivate UI

    Agent -> UI : chooses commission type
        activate UI

        UI --> Agent : requests the commission value
            deactivate UI

    alt sale

            autonumber 30

            Agent -> UI : types the requested data [Requested price]
                activate UI

            else rent

                Agent -> UI : types the requested data [Requested fee and contract duration]

        end


        UI -> CTRL : createAnnouncement(propertyData)
                        activate CTRL

                        CTRL -> CTRL : Property Type

                                CTRL -> Repository : getInstance()
                                activate Repository

                                    Repository --> CTRL: repositories
                                deactivate Repository

                                CTRL -> Repository2 : getPublishRepository()
                                activate Repository2

                                    Repository2 --> CTRL : publishRepository
                                deactivate Repository2

                                CTRL -> announcementRepository : createAnnouncement(propertyData)
                                activate announcementRepository

                                       announcementRepository -> announcement** : createAnnouncement(propertyData)
                                       announcementRepository -> announcementRepository : addAnnouncement(announcement)

                                       activate announcementRepository
                                       announcementRepository -> announcementRepository : validateAnnouncement(announcement)
                                       activate announcementRepository
                                       deactivate announcementRepository

                                announcementRepository --> CTRL : announcement
                                deactivate announcementRepository

            CTRL --> UI : announcement
            deactivate CTRL

            UI --> Agent : displays announcement details and requests confirmation
            deactivate UI

    Agent -> UI : confirm to publish the announcement
            activate UI

            UI --> Agent : displays operation success
            deactivate UI
deactivate Agent

@enduml