@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

participant "DealAnalysesController" as controller
participant ":Repositories" as singleton
participant "repositories\n:Repositories" as repositories
participant "publishedAnnouncementRepository\nPublishedAnnouncementRepository" as announcementrep
participant "regressionModel\n:RegressionModel" as regressionmodel
participant "regressionMapper\n:RegressionMapper" as mapper
participant "regressionDTO : RegressionDTO" as dto
participant "multiLinear : MultiLinear" as multi
participant "singleLinear : SingleLinear" as single

activate controller
    controller -> singleton : getInstance()
        activate singleton

                singleton --> controller : repository

            deactivate singleton

            controller -> repositories : getPublishedAnnouncementRepository()

            activate repositories

                repositories --> controller : PublishedAnnouncementRepository

            deactivate repositories

                controller -> announcementrep : getParameterMatrix(parameter)
                activate announcementrep
                announcementrep --> controller : parameters
                deactivate announcementrep

            controller -> regressionmodel** : create(parameters)

            controller -> regressionmodel : getRegressionModel(parameters, significance)


            activate regressionmodel
            regressionmodel --> controller : regressionModel
            deactivate regressionmodel

            alt type of regression equals to multilinear
                controller -> multi : predictMulti(parameters)
                activate multi
                multi --> controller : prediction
                deactivate multi

            else type of regression equals to single linear
                controller -> single : predictSimple(parameter)
                activate single
                single --> controller : prediction
                deactivate single

            controller -> mapper : toDTO(regressionModel)
            activate mapper
            mapper --> dto** : create(regressionModel.getAnalysisReport())

            mapper --> controller : regressionDto
            deactivate mapper


@enduml