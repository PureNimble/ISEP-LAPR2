@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Network Manager" as NetworkManager
participant ":ListDealsUI" as ListDealsUI
participant ":ListDealsController" as ListDealsController
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "offerRepository\nOfferRepository" as OfferRepository
participant ":OfferMapper" as OfferMapper
participant "listOfferDTO:List<OfferDTO>" as ListOfferDto
participant "listOffer:List<Offer>" as ListOffer
participant "offerDto:OfferDto" as OfferDto

activate NetworkManager

        NetworkManager -> ListDealsUI : asks to see list of deals made
        activate ListDealsUI

        ListDealsUI --> NetworkManager: requests filter criteria(asceding/descending by area)
        deactivate ListDealsUI

alt ascending
 NetworkManager -> ListDealsUI : chooses ascending criteria by area
 activate ListDealsUI

'            UI --> ADM : requests data (reference, description,  informal \n description, technical description, duration, cost)
            'create CTRL
            ListDealsUI -> ListDealsController** : create

            ListDealsUI -> ListDealsController : getOffersListDeals()
            activate ListDealsController

                ListDealsController -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> ListDealsController: repositories
                deactivate RepositorySingleton

                ListDealsController -> PLAT : getOfferRepository()
                activate PLAT

                    PLAT --> ListDealsController: offerRepository
                deactivate PLAT

                ListDealsController -> OfferRepository : getDealsByAscendingArea()
                activate OfferRepository

                    OfferRepository --> ListDealsController : offersListMade
                deactivate OfferRepository

                ListDealsController --> OfferMapper : toDto(offersListMade)
                activate OfferMapper

                OfferMapper -> ListOfferDto** : create(...)
loop
                OfferMapper -> ListOffer : orderAmount = getOrderAmount()
                activate ListOffer
                deactivate ListOffer

                OfferMapper -> ListOffer : publishedAnnouncement = getPublishedAnnouncement()
                activate ListOffer
                deactivate ListOffer

                 OfferMapper -> ListOffer : name = getName()
                 activate ListOffer
                 deactivate ListOffer

                 OfferMapper -> ListOffer: offerState = getOfferState()
                 activate ListOffer
                 deactivate ListOffer

                 OfferMapper -> OfferMapper: offerDTO = toDtoObject(orderAmount,name,offerState,publishedAnnouncement)
                 activate OfferMapper
                 deactivate OfferMapper

                 OfferMapper --> OfferDto**: create(..)

                 OfferMapper -> ListOfferDto: add(OfferDto)
                 activate ListOfferDto
                 deactivate ListOfferDto
end
                 OfferMapper --> ListDealsController: offersDTOListMade


                ListDealsController --> ListDealsUI : offersDTOListMade
            deactivate ListDealsController







            ListDealsUI --> NetworkManager : shows deals made list by ascending area
        deactivate ListDealsUI
end

alt descending
 NetworkManager -> ListDealsUI : chooses ascending criteria by area
 activate ListDealsUI

'            UI --> ADM : requests data (reference, description,  informal \n description, technical description, duration, cost)
            'create CTRL

            ListDealsUI -> ListDealsController : getOffersListDeals()
            activate ListDealsController

                ListDealsController -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> ListDealsController: repositories
                deactivate RepositorySingleton

                ListDealsController -> PLAT : getOfferRepository()
                activate PLAT

                    PLAT --> ListDealsController: offerRepository
                deactivate PLAT

                ListDealsController -> OfferRepository : getDealsByDescendingArea()
                activate OfferRepository

                    OfferRepository --> ListDealsController : offersListMade
                deactivate OfferRepository

                ListDealsController --> OfferMapper : toDto(offersListMade)
                activate OfferMapper

                OfferMapper -> ListOfferDto** : create(...)
loop
                OfferMapper -> ListOffer : orderAmount = getOrderAmount()
                activate ListOffer
                deactivate ListOffer

                OfferMapper -> ListOffer : publishedAnnouncement = getPublishedAnnouncement()
                activate ListOffer
                deactivate ListOffer

                 OfferMapper -> ListOffer : name = getName()
                 activate ListOffer
                 deactivate ListOffer

                 OfferMapper -> ListOffer: offerState = getOfferState()
                 activate ListOffer
                 deactivate ListOffer

                 OfferMapper -> OfferMapper: offerDTO = toDtoObject(orderAmount,name,offerState,publishedAnnouncement)
                 activate OfferMapper
                 deactivate OfferMapper

                 OfferMapper --> OfferDto**: create(..)

                 OfferMapper -> ListOfferDto: add(OfferDto)
                 activate ListOfferDto
                 deactivate ListOfferDto
end
                 OfferMapper --> ListDealsController: offersDTOListMade


                ListDealsController --> ListDealsUI : offersDTOListMade
            deactivate ListDealsController







            ListDealsUI --> NetworkManager : shows deals made list by descending area
        deactivate ListDealsUI
end
    NetworkManager -> ListDealsUI : submits data
    activate ListDealsUI

            ListDealsUI --> NetworkManager: displays operation success
    deactivate ListDealsUI

deactivate NetworkManager

@enduml